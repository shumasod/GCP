# Configure the Google Cloud provider
provider "google" {
  project = var.project_id
  region  = var.region
  zone    = var.zone
}

# Variables
variable "project_id" {
  description = "The ID of the project in which resources will be managed."
  type        = string
}

variable "region" {
  description = "The region to manage resources in."
  type        = string
  default     = "us-central1"
}

variable "zone" {
  description = "The zone to manage resources in."
  type        = string
  default     = "us-central1-c"
}

variable "source_bucket" {
  description = "The name of the source GCS bucket."
  type        = string
}

variable "sink_bucket" {
  description = "The name of the destination GCS bucket."
  type        = string
}

# Create a Google Compute Engine instance
resource "google_compute_instance" "default" {
  name         = "terraform-instance"
  machine_type = "e2-micro"
  zone         = var.zone

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-11"
    }
  }

  network_interface {
    network = "default"

    access_config {
      // Ephemeral public IP
    }
  }

  metadata_startup_script = "echo hi > /test.txt"

  tags = ["foo", "bar"]
}

# Create a new network
resource "google_compute_network" "vpc_network" {
  name                    = "terraform-network"
  auto_create_subnetworks = "true"
}

# Create a firewall rule
resource "google_compute_firewall" "default" {
  name    = "terraform-firewall"
  network = google_compute_network.vpc_network.name

  allow {
    protocol = "icmp"
  }

  allow {
    protocol = "tcp"
    ports    = ["22", "80", "443"]
  }

  source_ranges = ["0.0.0.0/0"]
}

# Create a Google Cloud Storage transfer job
resource "google_storage_transfer_job" "gcs_to_gcs_transfer" {
  description = "Transfer data from one GCS bucket to another"
  project     = var.project_id

  transfer_spec {
    object_conditions {
      max_time_elapsed_since_last_modification = "600s"
    }
    transfer_options {
      delete_object_unique_in_sink = false
    }
    source_specs {
      object_conditions {
        excluded_prefixes = ["example/"]
      }
      source {
        bucket = var.source_bucket
      }
    }
    sink_specs {
      sink {
        bucket = var.sink_bucket
      }
    }
  }

  schedule {
    schedule_start_date {
      year  = 2023
      month = 5
      day   = 1
    }
    schedule_end_date {
      year  = 2025
      month = 1 
      day   = 1
    }
    start_time_of_day {
      hours   = 1
      minutes = 0
      nanos   = 0
    }
  }
}

# Output
output "instance_ip" {
  description = "The public IP address of the created instance."
  value       = google_compute_instance.default.network_interface[0].access_config[0].nat_ip
}
